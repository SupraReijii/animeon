h2 #{@animes.russian} / #{@animes.name}
.anime_page
  .anime_img_box
    .text_info
      span Фото
    div.anime_img
      = image_tag @animes.poster.url
      = link_to '', edit_anime_url(params[:id]), class: "edit_anime", title: 'Редактировать'
      - if user_signed_as_admin? && @animes.next_episode? != 0
        = link_to '', new_anime_episode_path(anime_id: @animes.id), class: "add_episode", title: 'Добавить эпизод'
      - if user_signed_as_admin? && @animes.shiki_id.present?
        = link_to '', "https://shikimori.one/animes/#{@animes.shiki_id}", class: "to_shiki", target: "_blank", title: 'Аниме на шикимори'
  .anime_info_box
    .text_info
      = link_to 'Информация', anime_information_path(@animes)
    .anime_info
      - if @animes.status.present?
        .line
          span.key #{Anime.human_attribute_name(:status)}
          = link_to animes_path(status: @animes.status)
            span.value.link  - #{@animes.status_text}
      - if @animes.kind.present?
        .line
          span.key #{Anime.human_attribute_name(:kind)}
          = link_to animes_path(kind: @animes.kind)
            span.value.link  - #{@animes.kind_text}
      - if @animes.status == :ongoing.to_s
        .line
          span.key #{Anime.human_attribute_name(:episodes)}
          span.value  - #{@animes.episodes_aired} / #{@animes.episodes}
      - if @animes.status == :released.to_s
        .line
          span.key #{Anime.human_attribute_name(:episodes)}
          span.value  - #{@animes.episodes}
      - if @animes.genres != []
        .line
          span.key #{Anime.human_attribute_name(:genres)} -
          - @animes.genres.each do |g|
            - genre = Genre.find(g)
            = link_to animes_path(genres: genre.name)
              span.value.link  #{genre.russian}
      - if @animes.age_rating.present?
        .line
          span.key #{Anime.human_attribute_name(:age_rating)}
          span.value  - #{@animes.age_rating_text}
      - if @animes.duration.present?
        .line
          span.key #{Anime.human_attribute_name(:duration)}
          span.value  - #{humanize_minutes(@animes.duration)}
      - if @animes.franchise.present?
        .line
          span.key #{Anime.human_attribute_name(:franchise)}
          = link_to animes_path(franchise: @animes.franchise)
            span.value.link  - #{@animes.franchise.capitalize.gsub('_', ' ')}
      - if @animes.studio_ids != []
        .text_info.studio
          span Студия
        - if @animes.studio_ids.count < 2
          - studio = Studio.find(@animes.studio_ids.first)
          = link_to animes_path(studio: studio.id)
            - if studio.image_file_name.nil?
              .studio_img
                span.link #{studio.name}
            - else
              .studio_img
                = image_tag studio.image.url
        - else
          - @animes.studio_ids.each do |studio_id|
            - studio = Studio.find(studio_id.to_i)
            = link_to animes_path(studio: studio_id)
              .studio_img
                span.link #{studio.name}

      - if user_signed_in?
        .text_info.user_status
          span Статус пользователя
        .line
          span.key #{Anime.human_attribute_name(:episodes_watched)}
          span.value  - #{@user_rate.episodes} / #{@animes.episodes}
        .line
          span.key #{Anime.human_attribute_name(:user_status)}
          = link_to anime_user_list_path(list_type: @user_rate.status, user_id: current_user)
            span.value.link  - #{@user_rate.status_name}
        - if user_signed_in?
          = button_to '', anime_increment_episode_path(anime_id: @animes.id), class: "add_episode", title: 'Добавить просмотренную серию'
          = button_to '', anime_decrement_episode_path(anime_id: @animes.id), class: "remove_episode", title: 'Убрать просмотренную серию'
          - if @user_rate.status == 'known'
            = button_to '', anime_user_status_path(anime_id: @animes.id, status: 'planned'), class: "to_planned", title: 'Запланировать'
          - if @user_rate.status != 'completed'
            = button_to '', anime_user_status_path(anime_id: @animes.id, status: 'completed'), class: "to_completed", title: 'Просмотрено'
  .watch
    .text_info
      span Смотреть #{@animes.russian}
    .episodes_list
      - @animes.episode.order(episode_number: :asc).each do |e|
        - if !@user_rate.present?
          = link_to "Серия #{e.episode_number}", anime_episode_url(anime_id: @animes.id, id: e.id), class: "btn btn-outline-light anime_episode"
        - elsif  @user_rate.episodes >= e.episode_number
          = link_to "Серия #{e.episode_number}", anime_episode_url(anime_id: @animes.id, id: e.id), class: "btn btn-outline-light anime_episode episode_watched"
        - else
          = link_to "Серия #{e.episode_number}", anime_episode_url(anime_id: @animes.id, id: e.id), class: "btn btn-outline-light anime_episode"
