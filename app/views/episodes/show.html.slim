= link_to anime_path(@episode.anime)
  h2 #{@episode.anime.russian} / #{@episode.anime.name}
span Серия #{@episode.episode_number}
.video_block
  .video_choose
  .anime-video-player[
    id="player-#{@episode.id}"
  ]
  script new Playerjs({id:"player-#{@episode.id}", file: #{compile_videojs_url(@episode.video.where(status: 2))}});
.buttons
  - if  @episode.episode_number > 1
    = link_to 'Предыдущая серия', anime_episode_path(id: @episode.previous_episode.id), class: "btn btn-outline-danger ep"
  - else
    = link_to 'Предыдущая серия', nil, class: "btn btn-outline-danger ep"
  - if @episode.episode_number < @episode.max_episode
    = link_to 'Следующая серия', anime_episode_path(id: @episode.next_episode.id, watched: @episode.episode_number), class: "btn btn-outline-success ep"
  - else
    = link_to 'Просмотренно', anime_episode_path(id: @episode.id, watched: @episode.episode_number), class: "btn btn-outline-success ep"
  - if user_signed_in? && (current_user.role == 'admin' || current_user.role == 'uploader')
    = link_to "Редактировать видео", edit_anime_episode_video_path(episode_id: @episode.id, id: 1), class: "btn btn-outline-info admin"
    = link_to "Добавить видео", new_anime_episode_video_path(episode_id: @episode.id), class: "btn btn-outline-info admin add_video"
- unless @episode.video.empty?
  h3
    | Загрузчики
    - @episode.video.each do |v|
      .uploader
        = link_to User.find(v.user_id)
          = image_tag(User.find(v.user_id).avatar.url, size: '40x40', class: "uploader_avatar")
          p
            | #{User.find(v.user_id).username}

